import { useLocation, useNavigate } from 'react-router-dom';
import { useState, useEffect } from 'react';

function ResetPassword() {
    const location = useLocation();
    const navigate = useNavigate();
    const queryParams = new URLSearchParams(location.search);

    // âœ… URL-dÉ™n email vÉ™ tokeni gÃ¶tÃ¼r
    const emailFromUrl = queryParams.get('email');
    const tokenFromUrl = queryParams.get('token');

    // ðŸ”¹ State-lÉ™r
    const [email, setEmail] = useState('');
    const [token, setToken] = useState('');
    const [newPassword, setNewPassword] = useState('');
    const [confirmPassword, setConfirmPassword] = useState('');
    const [error, setError] = useState('');
    const [success, setSuccess] = useState('');

    // âœ… Tokeni decode etmÉ™k vÉ™ State-É™ yazmaq
    useEffect(() => {
        if (emailFromUrl && tokenFromUrl) {
            setEmail(emailFromUrl);
            setToken(decodeURIComponent(tokenFromUrl)); // ðŸ”¥ Token decode edilir
        }
    }, [emailFromUrl, tokenFromUrl]);

    // âœ… ÅžifrÉ™ dÉ™yiÅŸmÉ™ formunu idarÉ™ edÉ™n funksiya
    const handlePasswordChange = (event) => {
        const { name, value } = event.target;
        if (name === 'newPassword') setNewPassword(value);
        if (name === 'confirmPassword') setConfirmPassword(value);
    };

    // âœ… ÅžifrÉ™ni yenilÉ™mÉ™k Ã¼Ã§Ã¼n API Ã§aÄŸÄ±rÄ±ÅŸÄ±
    const handleSubmit = async (event) => {
        event.preventDefault();

        // ðŸ”¹ ÅžifrÉ™lÉ™ri yoxlayÄ±rÄ±q
        if (newPassword !== confirmPassword) {
            setError('ÅžifrÉ™ni tÉ™sdiq edin!');
            return;
        }

        try {
            // âœ… `fetch` vasitÉ™silÉ™ API Ã§aÄŸÄ±rÄ±ÅŸÄ±
            const response = await fetch('https://finalprojectt-001-site1.jtempurl.com/api/Auth/ResetPassword', {
                method: 'POST',
                headers: {
                    'accept': '*/*',
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    email,
                    token,
                    newPassword,
                    confirmPassword,
                }),
            });

            if (!response.ok) {
                const errorData = await response.json();
                console.error('ðŸš¨ Server XÉ™tasÄ±:', errorData);
                throw new Error(errorData.message || 'ÅžifrÉ™ sÄ±fÄ±rlanarkÉ™n xÉ™ta baÅŸ verdi.');
            }

            const data = await response.json();
            console.log('âœ… ÅžifrÉ™ sÄ±fÄ±rlandÄ±:', data);
            setSuccess('ÅžifrÉ™ uÄŸurla sÄ±fÄ±rlandÄ±! Ä°ndi yenidÉ™n daxil olun.');
            setError('');

            // ðŸ”¥ 3 saniyÉ™ sonra `login` sÉ™hifÉ™sinÉ™ yÃ¶nlÉ™ndiririk
            setTimeout(() => {
                navigate('/login');
            }, 3000);
            
        } catch (error) {
            console.error('ðŸš¨ XÉ™ta:', error);
            setError(`XÉ™ta baÅŸ verdi: ${error.message}`);
            setSuccess('');
        }
    };

    return (
        <div className="min-h-screen py-[100px] bg-gray-100 flex items-center justify-center">
            <div className="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 max-w-md w-full">
                <h1 className="text-center text-2xl font-bold mb-6">ÅžifrÉ™ni SÄ±fÄ±rlayÄ±n</h1>
                
                {error && <div className="mb-4 text-red-500 text-center">{error}</div>}
                {success && <div className="mb-4 text-green-500 text-center">{success}</div>}
                
                <form onSubmit={handleSubmit}>
                    {/* ðŸ”¹ Email */}
                    <div className="mb-4">
                        <label className="block text-gray-700 font-bold mb-2">Email</label>
                        <input
                            className="border rounded w-full py-2 px-3 text-gray-700 focus:outline-none focus:shadow-outline"
                            type="email"
                            value={email}
                            readOnly
                            required
                        />
                    </div>

                    {/* ðŸ”¹ Token */}
                    <div className="mb-4">
                        <label className="block text-gray-700 font-bold mb-2">Token</label>
                        <input
                            className="border rounded w-full py-2 px-3 text-gray-700 focus:outline-none focus:shadow-outline"
                            type="text"
                            value={token}
                            readOnly
                            required
                        />
                    </div>

                    {/* ðŸ”¹ Yeni ÅžifrÉ™ */}
                    <div className="mb-4">
                        <label className="block text-gray-700 font-bold mb-2">Yeni ÅžifrÉ™</label>
                        <input
                            className="border rounded w-full py-2 px-3 text-gray-700 focus:outline-none focus:shadow-outline"
                            type="password"
                            name="newPassword"
                            placeholder="Yeni ÅŸifrÉ™nizi daxil edin"
                            value={newPassword}
                            onChange={handlePasswordChange}
                            required
                        />
                    </div>

                    {/* ðŸ”¹ ÅžifrÉ™ni TÉ™sdiq Et */}
                    <div className="mb-4">
                        <label className="block text-gray-700 font-bold mb-2">ÅžifrÉ™ni TÉ™sdiq Edin</label>
                        <input
                            className="border rounded w-full py-2 px-3 text-gray-700 focus:outline-none focus:shadow-outline"
                            type="password"
                            name="confirmPassword"
                            placeholder="ÅžifrÉ™nizi tÉ™sdiq edin"
                            value={confirmPassword}
                            onChange={handlePasswordChange}
                            required
                        />
                    </div>

                    {/* ðŸ”¹ GÃ¶ndÉ™r dÃ¼ymÉ™si */}
                    <button
                        className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full"
                        type="submit"
                    >
                        ÅžifrÉ™ni SÄ±fÄ±rlayÄ±n
                    </button>
                </form>
            </div>
        </div>
    );
}

export default ResetPassword;
